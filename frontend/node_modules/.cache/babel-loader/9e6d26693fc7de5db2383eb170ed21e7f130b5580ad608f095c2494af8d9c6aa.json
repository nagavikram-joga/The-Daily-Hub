{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jnaga\\\\The Daily Hub\\\\frontend\\\\src\\\\components\\\\NoteForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useContext } from 'react';\nimport { useNotesContext } from \"../hooks/useNotesContext\";\nimport TokenContext from '../context/TokenContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteForm = () => {\n  _s();\n  const {\n    dispatch\n  } = useNotesContext();\n  const {\n    userToken\n  } = useContext(TokenContext);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const note = {\n      title,\n      content\n    };\n    const response = await fetch('/api/notes', {\n      method: 'POST',\n      body: JSON.stringify(note),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userToken}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setError(null);\n      setTitle('');\n      setContent('');\n      setEmptyFields([]);\n      console.log('new note added:', json);\n      dispatch({\n        type: 'CREATE_NOTE',\n        payload: json\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"create\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Note Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTitle(e.target.value),\n      value: title,\n      className: emptyFields.includes('title') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Content:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => setContent(e.target.value),\n      value: content,\n      className: emptyFields.includes('content') ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteForm, \"VfppUssSiGKSTIarmnfrUvV5GQY=\", false, function () {\n  return [useNotesContext];\n});\n_c = NoteForm;\nexport default NoteForm;\nvar _c;\n$RefreshReg$(_c, \"NoteForm\");","map":{"version":3,"names":["useState","useContext","useNotesContext","TokenContext","NoteForm","dispatch","userToken","title","setTitle","content","setContent","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","note","response","fetch","method","body","JSON","stringify","headers","Authorization","json","ok","console","log","type","payload","target","value","includes"],"sources":["C:/Users/jnaga/The Daily Hub/frontend/src/components/NoteForm.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useContext } from 'react';\r\nimport { useNotesContext } from \"../hooks/useNotesContext\"\r\nimport TokenContext from '../context/TokenContext';\r\nconst NoteForm = () => {\r\n    const { dispatch } = useNotesContext()\r\n    const {userToken} = useContext(TokenContext)\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const [emptyFields, setEmptyFields] = useState([])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const note = {title, content}\r\n    \r\n    const response = await fetch('/api/notes', {\r\n      method: 'POST',\r\n      body: JSON.stringify(note),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userToken}`\r\n      }\r\n    })\r\n    const json = await response.json()\r\n\r\n    if (!response.ok) {\r\n      setError(json.error)\r\n      setEmptyFields(json.emptyFields)\r\n    }\r\n    if (response.ok) {\r\n      setError(null)\r\n      setTitle('')\r\n      setContent('')\r\n      setEmptyFields([])\r\n      console.log('new note added:', json)\r\n      dispatch({type: 'CREATE_NOTE', payload: json})\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form className=\"create\" onSubmit={handleSubmit}> \r\n      <h3>Add a New Note</h3>\r\n\r\n      <label>Note Title:</label>\r\n      <input \r\n        type=\"text\" \r\n        onChange={(e) => setTitle(e.target.value)} \r\n        value={title}\r\n        className={emptyFields.includes('title') ? 'error' : ''}\r\n      />\r\n\r\n      <label>Content:</label>\r\n      <textarea\r\n        onChange={(e) => setContent(e.target.value)} \r\n        value={content}\r\n        className={emptyFields.includes('content') ? 'error' : ''}\r\n      />\r\n\r\n\r\n      <button>Add Note</button>\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default NoteForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}